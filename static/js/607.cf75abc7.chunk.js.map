{"version":3,"file":"static/js/607.cf75abc7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/TaskForm/TaskForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Task/Task.module.css?22e8","components/TaskList/TaskList.styled.js","components/Task/Task.js","redux/tasks/constants.js","redux/tasks/selectors.js","components/TaskList/TaskList.js","pages/TaskPage/TaskPage.styled.js","pages/TaskPage/TaskPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Buttons/Button.module.css?8b6e","shared/Buttons/Buttons.js","theme.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'theme';\nimport { Form, Field } from 'formik';\n\nexport const PhonebookForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const Label = styled.label`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Error = styled.p`\n  display: inline;\n  position: absolute;\n  top: calc(${theme.space[2]} + 30px);\n  font-size: ${theme.fontSizes.m};\n  color: red;\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from 'shared/Buttons/Buttons';\n// import css from \"./TaskForm.module.css\";\nimport { addTask } from 'redux/tasks/operations';\nimport { toast } from 'react-toastify';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  PhonebookForm as Form,\n  Input,\n  Label,\n  Error,\n} from '../ContactForm/ContactForm.styled';\n\nconst ValidationSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  text: Yup.string().min(2, 'Too Short!').max(200, 'Too Long!'),\n});\n\nconst TaskForm = () => {\n  const dispatch = useDispatch();\n  const task = useSelector(store => store.contacts.items);\n\n  const handleAddTask = data => {\n    const title = data.title;\n    if (task.find(task => task.title === title)) {\n      toast.warning(`${title} is already in contacts`);\n      return;\n    }\n\n    const text = data.text;\n    const action = addTask({ title, text });\n\n    dispatch(action);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        text: '',\n      }}\n      validationSchema={ValidationSchema}\n      onSubmit={({ title, text }, { resetForm }) => {\n\n        const task = {\n          title: title,\n          text: text,\n        };\n\n        handleAddTask(task);\n        toast.info(`Task was add ${task.title}`);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"title\">Title</Label>\n        <Input id=\"title\" name=\"title\" placeholder=\"Title\" />\n        <ErrorMessage name=\"title\" component={Error} />\n\n        <Label htmlFor=\"text\">Text</Label>\n        <Input id=\"text\" name=\"text\" placeholder=\"Text\" />\n        <ErrorMessage name=\"text\" component={Error} />\n\n        <Button type=\"submit\" disabled={false} children=\"Add tack\"></Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"btn\":\"Task_btn__5Zeie\",\"checkbox\":\"Task_checkbox__XsrPA\"};","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TackListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n\nexport const TackItemLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 260px;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid #eee;\n  border-radius: ${theme.radii.normal};\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(190, 190, 190),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: lightgray;\n    box-shadow: 0px 0px 20px -18px;\n  }\n`;\n\nexport const TackText = styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\n","import { useDispatch } from 'react-redux';\nimport { MdClose } from 'react-icons/md';\nimport css from './Task.module.css';\nimport {\n  deleteTask,\n  fetchTasks,\n  toggleCompleted,\n} from 'redux/tasks/operations';\nimport { TackText } from 'components/TaskList/TaskList.styled';\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task._id));\n\n  const handleToggle = () => {\n    dispatch(toggleCompleted(task));\n    dispatch(fetchTasks());\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.done}\n        onChange={() => handleToggle(!task.done)}\n      />\n\n      <TackText>{task.title}</TackText>\n      <TackText>{task.text}</TackText>\n\n      <button className={css.btn} onClick={() => handleDelete()}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","export const statusFilters = Object.freeze({\n  all: \"all\",\n  active: \"active\",\n  completed: \"completed\",\n});\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { statusFilters } from \"./constants\";\n\nexport const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n\nexport const selectStatusFilter = state => state.tasks.items;\n\nexport const selectVisibleTasks = createSelector(\n  [selectTasks, selectStatusFilter],\n  (tasks, statusFilter) => {\n    // console.log('Calculating visible tasks');\n\n    switch (statusFilter) {\n      case statusFilters.active:\n        return tasks.filter(task => !task.completed);\n      case statusFilters.completed:\n        return tasks.filter(task => task.completed);\n      default:\n        return tasks;\n    }\n  }\n);\n\nexport const selectTaskCount = createSelector([selectTasks], tasks => {\n  console.log(\"Calculating task count\");\n\n  return tasks.reduce(\n    (count, task) => {\n      if (task.completed) {\n        count.completed += 1;\n      } else {\n        count.active += 1;\n      }\n      return count;\n    },\n    { active: 0, completed: 0 }\n  );\n});\n","import Task from \"components/Task/Task\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleTasks } from 'redux/tasks/selectors';\nimport { TackItemLi, TackListUl } from \"./TaskList.styled\";\n// import css from \"./TaskList.module.css\";\n\nconst TaskList = () => {\n  const tasks = useSelector(selectVisibleTasks);\n\n  return (\n    <TackListUl>\n      {tasks.map(task => (\n        <TackItemLi key={task.id}>\n          <Task task={task} />\n        </TackItemLi>\n      ))}\n    </TackListUl>\n  );\n};\n\nexport default TaskList;","import styled from 'styled-components';\n// import theme from 'theme';\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TaskSection = styled.section`\n  display: grid;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\n","// import StatusFilter from \"components/StatusFilter/StatusFilter\";\n// import TaskCounter from \"components/TaskCounter/TaskCounter\";\nimport TaskForm from \"components/TaskForm/TaskForm\";\nimport TaskList from \"components/TaskList/TaskList\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchTasks } from \"redux/tasks/operations\";\nimport { selectError, selectIsLoading } from \"redux/tasks/selectors\";\nimport { TaskSection, TaskWrapper } from \"./TaskPage.styled\";\n\n\nconst TaskPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    return (\n        <TaskWrapper>\n            <TaskSection>\n                {/* <TaskCounter /> */}\n            </TaskSection>\n\n            <TaskSection>\n                {/* <h2>Filter by status</h2> */}\n                {/* <StatusFilter /> */}\n                <TaskForm />\n                {isLoading && !error && <b>Request in progress...</b>}\n            </TaskSection>\n            \n            <TaskSection>\n                <TaskList />\n            </TaskSection>\n        </TaskWrapper>\n    );\n};\n\nexport default TaskPage;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__y0oeI\",\"isSelected\":\"Button_isSelected__VSqTZ\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["PhonebookForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","theme","Input","Field","_templateObject3","Error","_templateObject4","ValidationSchema","Yup","shape","title","min","max","required","text","dispatch","useDispatch","task","useSelector","store","contacts","items","handleAddTask","data","find","toast","concat","action","addTask","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","children","_jsxs","htmlFor","id","name","placeholder","ErrorMessage","component","Button","type","disabled","TackListUl","TackItemLi","TackText","className","css","checked","done","onChange","toggleCompleted","fetchTasks","onClick","deleteTask","_id","MdClose","size","statusFilters","Object","freeze","all","active","completed","selectTasks","state","tasks","selectIsLoading","isLoading","selectError","error","selectVisibleTasks","createSelector","statusFilter","filter","console","log","reduce","count","map","Task","TaskWrapper","TaskSection","useEffect","TaskForm","TaskList","_ref$selected","selected","_ref$type","otherProps","_objectWithoutProperties","_excluded","_objectSpread","clsx","_defineProperty","shadowColor","colors","white","background","primary","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","medium"],"sourceRoot":""}