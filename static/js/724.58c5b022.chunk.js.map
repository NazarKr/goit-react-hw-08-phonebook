{"version":3,"file":"static/js/724.58c5b022.chunk.js","mappings":"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","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/Buttons/Button.style.jsx","shared/Buttons/ButtonText.jsx","shared/TextFild/TextFild.styled.js","shared/TextFild/TextFild.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js","theme.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","import useForm from \"shared/hooks/useForm\";\nimport initialState from \"./initialState\";\nimport TextField from \"shared/TextFild/TextFild\";\nimport fields from \"./fields\";\nimport ButtonTxt from \"shared/Buttons/ButtonText\";\n\nconst LoginForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ initialState, onSubmit });\n    const { email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <ButtonTxt text=\"Submit\" />\n        </form>\n    )\n}\n\nexport default LoginForm;","import {  useDispatch } from \"react-redux\";\n// import { isUserLogin } from \"redux/auth/authSelector\";\nimport { login } from \"redux/auth/authOperations\";\n// import { Navigate } from \"react-router-dom\";\nimport LoginForm from \"components/LoginForm/LoginForm\";\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n\n    const handleLogin = (data) => {\n        dispatch(login(data));\n    }\n\n    return (\n        <div>\n            <h1>Register page</h1>\n            <LoginForm onSubmit={handleLogin} />\n        </div>\n    )\n}\n\nexport default LoginPage;","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    background-color: lightgray;\n    color: ${theme.colors.text};\n    padding: 8px 20px;\n    border-radius: ${theme.radii.normal};\n    border: 1px solid darkgray;\n    font-size: ${theme.fontSizes.s};\n    cursor: pointer;\n    &:hover {\n        background-color: ${theme.colors.background};\n        box-shadow: 0px 0px 20px -18px;\n    }\n    &:active {\n    transform: scale(0.95);\n    }\n    @media (min-width: 420px) {\n       font-size: ${theme.fontSizes.m};\n      }\n`;\n\nexport const ButtonText = styled.p`\n  margin-left: ${p => (p.Icon ? theme.space[3] : theme.space[0])};\n`;","import React from 'react';\nimport { ButtonStyled, ButtonText } from './Button.style'\nimport PropTypes from 'prop-types';\n\n\n\nconst ButtonTxt = ({ icon: Icon = null, type, disabled, text, onClick, iconSize, }) => {\n    return (\n        <>\n            <ButtonStyled\n                type={type}\n                disabled={disabled}\n                onClick={onClick}          \n            >{Icon && <Icon size={iconSize} />}\n                \n                <ButtonText Icon={Icon}>{text}</ButtonText>\n            </ButtonStyled>\n        </>\n    )\n}\n\nexport default ButtonTxt;\n\nButtonTxt.propTypes = {\n    icon: PropTypes.func,\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    iconSize: PropTypes.number\n};","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const Wraper = styled.div`\n  display: grid;\n  /* grid-template-columns: 120px 1fr; */\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const Field = styled.input`\n  width: 240px;\n  padding: 10px;\n  padding-left: 30px;\n  font-size: ${theme.fontSizes.xs};\n  border-radius: ${theme.radii.normal};\n  border: 1px solid #ccc;\n  box-shadow: 0px 0px 20px -20px;\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { Field, Wraper } from \"./TextFild.styled\";\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <Wraper>\n            <label htmlFor={id}>{label}</label>\n            <Field id={id} onChange={handleChange} {...props} />\n        </Wraper>\n    )\n}\n\nexport default TextField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["email","password","type","name","required","label","placeholder","_ref","onSubmit","_useForm","useForm","initialState","state","handleChange","handleSubmit","_jsxs","children","_jsx","TextField","_objectSpread","value","fields","ButtonTxt","text","dispatch","useDispatch","LoginForm","data","login","ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","theme","ButtonText","_templateObject2","p","Icon","_ref$icon","icon","disabled","onClick","iconSize","_Fragment","size","Wraper","Field","props","_objectWithoutProperties","_excluded","id","useMemo","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","_useState","useState","_useState2","_slicedToArray","setState","useCallback","_ref2","target","prevState","_defineProperty","e","preventDefault","shadowColor","colors","white","background","primary","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","concat","medium"],"sourceRoot":""}