{"version":3,"file":"static/js/611.a2169970.chunk.js","mappings":"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","sources":["redux/tasks/constants.js","redux/tasks/selectors.js","components/TaskCounter/TaskCounter.styled.js","components/TaskCounter/TaskCounter.js","webpack://goit-react-hw-08-phonebook/./src/components/TaskForm/TaskForm.module.css?c90e","components/TaskForm/TaskForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Task/Task.module.css?22e8","components/TaskList/TaskList.styled.js","components/Task/Task.js","components/TaskList/TaskList.js","pages/TaskPage/TaskPage.styled.js","pages/TaskPage/TaskPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Buttons/Button.module.css?8b6e","shared/Buttons/Buttons.js","theme.js"],"sourcesContent":["export const statusFilters = Object.freeze({\n  all: \"all\",\n  active: \"active\",\n  completed: \"completed\",\n});\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { statusFilters } from \"./constants\";\n\nexport const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n\nexport const selectStatusFilter = state => state.tasks.items;\n\nexport const selectVisibleTasks = createSelector(\n  [selectTasks, selectStatusFilter],\n  (tasks, statusFilter) => {\n    console.log('Calculating visible tasks');\n\n    switch (statusFilter) {\n      case statusFilters.active:\n        return tasks.filter(task => !task.completed);\n      case statusFilters.completed:\n        return tasks.filter(task => task.completed);\n      default:\n        return tasks;\n    }\n  }\n);\n\nexport const selectTaskCount = createSelector([selectTasks], tasks => {\n  console.log(\"Calculating task count\");\n\n  return tasks.reduce(\n    (count, task) => {\n      if (task.completed) {\n        count.completed += 1;\n      } else {\n        count.active += 1;\n      }\n      return count;\n    },\n    { active: 0, completed: 0 }\n  );\n});\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TaskCounterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 24px;\n`;\n\nexport const TaskCounterText = styled.p`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  margin-bottom: 12px;\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { selectTaskCount } from 'redux/tasks/selectors';\nimport { TaskCounterText, TaskCounterWrapper } from \"./TaskCounter.styled\";\n\nconst TaskCounter = () => {\n  const { active, completed } = useSelector(selectTaskCount);\n\n  return (\n    <TaskCounterWrapper>\n      <TaskCounterText>Active: {active}</TaskCounterText>\n      <TaskCounterText>Completed: {completed}</TaskCounterText>\n    </TaskCounterWrapper>\n  );\n};\n\nexport default TaskCounter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskForm_form__LZ0D1\",\"field\":\"TaskForm_field__3Hftx\"};","import { useDispatch } from \"react-redux\";\nimport { Button } from 'shared/Buttons/Buttons';\nimport css from \"./TaskForm.module.css\";\nimport { addTask } from 'redux/tasks/operations';\n\nconst TaskForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    dispatch(addTask(event.target.elements.text.value));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text...\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n\nexport default TaskForm;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"btn\":\"Task_btn__5Zeie\",\"checkbox\":\"Task_checkbox__XsrPA\"};","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TackListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n\nexport const TackItemLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 260px;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid #eee;\n  border-radius: ${theme.radii.normal};\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(190, 190, 190),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: lightgray;\n    box-shadow: 0px 0px 20px -18px;\n  }\n`;\n\nexport const TackText = styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\n","import { useDispatch } from \"react-redux\";\nimport { MdClose } from \"react-icons/md\";\nimport css from \"./Task.module.css\";\nimport { deleteTask, toggleCompleted } from 'redux/tasks/operations';\nimport { TackText } from \"components/TaskList/TaskList.styled\";\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n\n  const handleToggle = () => dispatch(toggleCompleted(task));\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <TackText>{task.text}</TackText>\n      <button className={css.btn} onClick={handleDelete}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n\nexport default Task;","import Task from \"components/Task/Task\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleTasks } from 'redux/tasks/selectors';\nimport { TackItemLi, TackListUl } from \"./TaskList.styled\";\n// import css from \"./TaskList.module.css\";\n\nconst TaskList = () => {\n  const tasks = useSelector(selectVisibleTasks);\n\n  return (\n    <TackListUl>\n      {tasks.map(task => (\n        <TackItemLi key={task.id}>\n          <Task task={task} />\n        </TackItemLi>\n      ))}\n    </TackListUl>\n  );\n};\n\nexport default TaskList;","import styled from 'styled-components';\n// import theme from 'theme';\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TaskSection = styled.section`\n  display: grid;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\n","// import StatusFilter from \"components/StatusFilter/StatusFilter\";\nimport TaskCounter from \"components/TaskCounter/TaskCounter\";\nimport TaskForm from \"components/TaskForm/TaskForm\";\nimport TaskList from \"components/TaskList/TaskList\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchTasks } from \"redux/tasks/operations\";\nimport { selectError, selectIsLoading } from \"redux/tasks/selectors\";\nimport { TaskSection, TaskWrapper } from \"./TaskPage.styled\";\n\n\nconst TaskPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    return (\n        <TaskWrapper>\n            <TaskSection>\n                <TaskCounter />\n            </TaskSection>\n\n            <TaskSection>\n                {/* <h2>Filter by status</h2> */}\n                {/* <StatusFilter /> */}\n                <TaskForm />\n                {isLoading && !error && <b>Request in progress...</b>}\n            </TaskSection>\n            \n            <TaskSection>\n                <TaskList />\n            </TaskSection>\n        </TaskWrapper>\n    );\n};\n\nexport default TaskPage;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__y0oeI\",\"isSelected\":\"Button_isSelected__VSqTZ\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["statusFilters","Object","freeze","all","active","completed","selectTasks","state","tasks","items","selectIsLoading","isLoading","selectError","error","selectVisibleTasks","createSelector","statusFilter","console","log","filter","task","selectTaskCount","reduce","count","TaskCounterWrapper","styled","_templateObject","_taggedTemplateLiteral","TaskCounterText","_templateObject2","theme","_useSelector","useSelector","_jsxs","children","dispatch","useDispatch","className","css","onSubmit","event","preventDefault","form","target","addTask","elements","text","value","reset","_jsx","type","name","placeholder","Button","TackListUl","TackItemLi","TackText","_templateObject3","_ref","checked","onChange","toggleCompleted","onClick","deleteTask","id","MdClose","size","map","Task","TaskWrapper","TaskSection","useEffect","fetchTasks","TaskCounter","TaskForm","TaskList","_ref$selected","selected","_ref$type","otherProps","_objectWithoutProperties","_excluded","_objectSpread","clsx","_defineProperty","shadowColor","colors","white","background","primary","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","concat","medium"],"sourceRoot":""}