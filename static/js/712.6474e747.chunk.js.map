{"version":3,"file":"static/js/712.6474e747.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/tasks/constants.js","redux/tasks/selectors.js","components/TaskCounter/TaskCounter.styled.js","components/TaskCounter/TaskCounter.js","components/TaskForm/TaskForm.js","components/Task/Task.styled.js","webpack://goit-react-hw-08-phonebook/./src/components/Task/checkbox.module.css?588c","components/Task/Task.js","components/TaskList/TaskList.styled.js","components/TaskList/TaskList.js","pages/TaskPage/TaskPage.styled.js","pages/TaskPage/TaskPage.jsx","shared/Buttons/ButtonIcon.style.jsx","shared/Buttons/ButtonIcon.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Buttons/Button.module.css?8b6e","shared/Buttons/Buttons.js","theme.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'theme';\nimport { Form, Field } from 'formik';\n\nexport const PhonebookForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const Label = styled.label`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const InputText = styled(Field)`\n  margin-bottom: 10px;\n  height: 46px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Error = styled.p`\n  display: inline;\n  position: absolute;\n  top: calc(${theme.space[2]} + 30px);\n  font-size: ${theme.fontSizes.m};\n  color: red;\n`;\n","export const statusFilters = Object.freeze({\n  all: \"all\",\n  active: \"active\",\n  completed: \"completed\",\n});\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { statusFilters } from \"./constants\";\n\nexport const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n\nexport const selectStatusFilter = state => state.tasks.items;\n\nexport const selectVisibleTasks = createSelector(\n  [selectTasks, selectStatusFilter],\n  (tasks, statusFilter) => {\n    // console.log('Calculating visible tasks');\n\n    switch (statusFilter) {\n      case statusFilters.active:\n        return tasks.filter(task => !task.done);\n      case statusFilters.completed:\n        return tasks.filter(task => task.done);\n      default:\n        return tasks;\n    }\n  }\n);\n\nexport const selectTaskCount = createSelector([selectTasks], tasks => {\n  // console.log(\"Calculating task count\");\n\n  return tasks.reduce(\n    (count, task) => {\n      if (task.done) {\n        count.completed += 1;\n      } else {\n        count.active += 1;\n      }\n      return count;\n    },\n    { active: 0, completed: 0 }\n  );\n});\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TaskCounterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 24px;\n`;\n\nexport const TaskCounterText = styled.p`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  margin-bottom: 12px;\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { selectTaskCount } from 'redux/tasks/selectors';\nimport { TaskCounterText, TaskCounterWrapper } from \"./TaskCounter.styled\";\n\nconst TaskCounter = () => {\n  const { active, completed } = useSelector(selectTaskCount);\n\n  return (\n    <TaskCounterWrapper>\n      <TaskCounterText>Active: {active}</TaskCounterText>\n      <TaskCounterText>Completed: {completed}</TaskCounterText>\n    </TaskCounterWrapper>\n  );\n};\n\nexport default TaskCounter;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from 'shared/Buttons/Buttons';\n// import css from \"./TaskForm.module.css\";\nimport { addTask } from 'redux/tasks/operations';\nimport { toast } from 'react-toastify';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  PhonebookForm as Form,\n  Input,\n  Label,\n  Error,\n  InputText,\n} from '../ContactForm/ContactForm.styled';\n\nconst ValidationSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  text: Yup.string().min(2, 'Too Short!').max(200, 'Too Long!'),\n});\n\nconst TaskForm = () => {\n  const dispatch = useDispatch();\n  const task = useSelector(store => store.contacts.items);\n\n  const handleAddTask = data => {\n    const title = data.title;\n    if (task.find(task => task.title === title)) {\n      toast.warning(`${title} is already in contacts`);\n      return;\n    }\n\n    const text = data.text;\n    const action = addTask({ title, text });\n\n    dispatch(action);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        text: '',\n      }}\n      validationSchema={ValidationSchema}\n      onSubmit={({ title, text }, { resetForm }) => {\n        const task = {\n          title: title,\n          text: text,\n        };\n\n        handleAddTask(task);\n        toast.info(`Task was add ${task.title}`);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"title\">Title</Label>\n        <Input id=\"title\" name=\"title\" placeholder=\"Title\" />\n        <ErrorMessage name=\"title\" component={Error} />\n\n        <Label htmlFor=\"text\">Text</Label>\n        <InputText id=\"text\" name=\"text\" placeholder=\"Text\" />\n        <ErrorMessage name=\"text\" component={Error} />\n\n        <Button type=\"submit\" disabled={false} children=\"Add tack\"></Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  gap: 12px;\n  padding: 8px 0;\n`\nexport const TackTitle= styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeights.regular};\n  margin-bottom: 6px;\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n    \n  }\n`;\n\nexport const TackText = styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxContainer\":\"checkbox_checkboxContainer__F9tcV\",\"customCheckbox\":\"checkbox_customCheckbox__TbHQ7\",\"checkmark\":\"checkbox_checkmark__C1Vab\",\"checkAnim\":\"checkbox_checkAnim__rH8M0\"};","import { useDispatch } from 'react-redux';\nimport {\n  deleteTask,\n  fetchTasks,\n  toggleCompleted,\n} from 'redux/tasks/operations';\nimport ButtonIcon from 'shared/Buttons/ButtonIcon';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { TaskWrapper, TackText, TackTitle } from './Task.styled';\nimport css from './checkbox.module.css';\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task._id));\n\n  const handleToggle = () => {\n    dispatch(toggleCompleted(task));\n    dispatch(fetchTasks());\n  };\n\n  return (\n    <>\n      <TaskWrapper>\n        <label className={css.checkboxContainer}>\n          <input\n            className={css.customCheckbox}\n            checked={task.done}\n            onChange={() => handleToggle(!task.done)}\n            type=\"checkbox\"\n          />\n          <span className={css.checkmark}></span>\n        </label>\n\n        <div>\n          <TackTitle>{task.title}</TackTitle>\n          <TackText>{task.text}</TackText>\n        </div>\n      </TaskWrapper>\n\n      <ButtonIcon className={css.btn} onClick={() => handleDelete()}>\n        <AiOutlineDelete size={24} />\n      </ButtonIcon>\n    </>\n  );\n};\n\nexport default Task;\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const TackListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n\nexport const TackItemLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 260px;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid #eee;\n  border-radius: ${theme.radii.normal};\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(190, 190, 190),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: lightgray;\n    box-shadow: 0px 0px 20px -18px;\n  }\n`;\n\n\n\n","import Task from \"components/Task/Task\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleTasks } from 'redux/tasks/selectors';\nimport { TackItemLi, TackListUl } from \"./TaskList.styled\";\n// import css from \"./TaskList.module.css\";\n\nconst TaskList = () => {\n  const tasks = useSelector(selectVisibleTasks);\n\n  return (\n    <TackListUl>\n      {tasks.map(task => (\n        <TackItemLi key={task.id}>\n          <Task task={task} />\n        </TackItemLi>\n      ))}\n    </TackListUl>\n  );\n};\n\nexport default TaskList;","import styled from 'styled-components';\n// import theme from 'theme';\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TaskSection = styled.section`\n  display: grid;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\n","// import StatusFilter from \"components/StatusFilter/StatusFilter\";\nimport TaskCounter from \"components/TaskCounter/TaskCounter\";\nimport TaskForm from \"components/TaskForm/TaskForm\";\nimport TaskList from \"components/TaskList/TaskList\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchTasks } from \"redux/tasks/operations\";\nimport { selectError, selectIsLoading } from \"redux/tasks/selectors\";\nimport { TaskSection, TaskWrapper } from \"./TaskPage.styled\";\n\n\nconst TaskPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    return (\n      <TaskWrapper>\n        <TaskSection>\n          {/* <h2>Filter by status</h2>\n                <StatusFilter /> */}\n          <TaskForm />\n          {isLoading && !error && <b>Request in progress...</b>}\n        </TaskSection>\n\n        <TaskSection>\n          <TaskCounter />\n          <TaskList />\n        </TaskSection>\n      </TaskWrapper>\n    );\n};\n\nexport default TaskPage;","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ButtoIconStyled = styled.button`\n    display: flex;\n    align-items: center;\n    background: ${ props => props.primary ? \"lightgray\" : \"lightgray\"};\n    color: ${props => props.primary ? \"{theme.colors.text}\" : \"grey\" };\n    padding: 6px;\n    border-radius: ${theme.radii.normal};\n    border: 1px solid darkgray;\n    font-size: ${theme.fontSizes.s};\n    cursor: pointer;\n    &:hover {\n        background-color: #1976d2;\n        box-shadow: 0px 0px 20px -18px;\n    }\n    &:active {\n    transform: scale(0.95);\n    }\n    @media (min-width: 420px) {\n       font-size: ${theme.fontSizes.m};\n      }\n`;","import React from 'react';\nimport { ButtoIconStyled } from './ButtonIcon.style'\n\n\nconst ButtonIcon = ({ icon: Icon = null, type, disabled, children, onClick, iconSize, primary }) => {\n    return (\n        <>\n            <ButtoIconStyled\n                primary={primary}\n                type={type}\n                disabled={disabled}\n                onClick={onClick}\n            >{Icon && <Icon size={iconSize} />}\n\n                {children}\n            </ButtoIconStyled>\n        </>\n    )\n}\n\nButtonIcon.defaultProps = {\n    onClick: () => null,\n    children: null,\n    // primary: null,\n};\n\n\nexport default ButtonIcon;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__y0oeI\",\"isSelected\":\"Button_isSelected__VSqTZ\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["PhonebookForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","theme","Input","Field","_templateObject3","InputText","_templateObject4","Error","_templateObject5","statusFilters","Object","freeze","all","active","completed","selectTasks","state","tasks","items","selectIsLoading","isLoading","selectError","error","selectVisibleTasks","createSelector","statusFilter","filter","task","done","selectTaskCount","reduce","count","TaskCounterWrapper","TaskCounterText","_useSelector","useSelector","_jsxs","children","ValidationSchema","Yup","shape","title","min","max","required","text","dispatch","useDispatch","store","contacts","handleAddTask","data","find","toast","concat","action","addTask","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","htmlFor","id","name","placeholder","ErrorMessage","component","Button","type","disabled","TaskWrapper","TackTitle","TackText","_Fragment","className","css","checked","onChange","toggleCompleted","fetchTasks","ButtonIcon","onClick","deleteTask","_id","AiOutlineDelete","size","TackListUl","TackItemLi","map","Task","TaskSection","useEffect","TaskForm","TaskCounter","TaskList","ButtoIconStyled","props","primary","_ref$icon","icon","Icon","iconSize","defaultProps","_ref$selected","selected","_ref$type","otherProps","_objectWithoutProperties","_excluded","_objectSpread","clsx","_defineProperty","shadowColor","colors","white","background","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","medium"],"sourceRoot":""}