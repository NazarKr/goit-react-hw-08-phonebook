{"version":3,"file":"static/js/924.7014c97d.chunk.js","mappings":"kPAIO,MAAMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAO5BC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6HAClBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,YAAAA,OACNA,EAAAA,EAAAA,OAAAA,UAGMA,EAAAA,EAAAA,UAAAA,GAIJC,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sXAGnBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,MAAAA,GACJA,EAAAA,EAAAA,MAAAA,GAEMA,EAAAA,EAAAA,MAAAA,OACGA,EAAAA,EAAAA,OAAAA,QAGHA,EAAAA,EAAAA,MAAAA,KACNA,EAAAA,EAAAA,OAAAA,UAQIA,EAAAA,EAAAA,UAAAA,GAIJI,GAAYV,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uYAIvBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,MAAAA,GACJA,EAAAA,EAAAA,MAAAA,GAEMA,EAAAA,EAAAA,MAAAA,OACGA,EAAAA,EAAAA,OAAAA,QAGHA,EAAAA,EAAAA,MAAAA,KACNA,EAAAA,EAAAA,OAAAA,UAQIA,EAAAA,EAAAA,UAAAA,GAIJM,EAAQZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gHAGfG,EAAAA,EAAAA,MAAAA,GACCA,EAAAA,EAAAA,UAAAA,E,kIC7Df,MAGMQ,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,UAAWF,EAAAA,KACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aACpDG,MAAOP,EAAAA,KACJQ,QATH,0GASwB,uBACrBH,SAAS,cAwEd,EArEoBI,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMF,SAASG,QAC/CC,GAAWC,EAAAA,EAAAA,MAgBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbhB,UAAW,GACXI,SAAU,GACVC,MAAO,GACPY,MAAO,IAETC,iBAAkBrB,EAClBsB,SAAUA,CAAAC,EAAAC,KAA2D,IAA1D,UAAErB,EAAS,SAAEI,EAAQ,MAAEC,EAAK,MAAEY,GAAOG,GAAE,UAAEE,GAAWD,EAC7D,MAOME,EAAU,CACdC,KARWA,EAACxB,EAAWI,IACnBA,EACKJ,EAAUyB,OAAS,IAAMrB,EAASqB,OAEpCzB,EAAUyB,OAIXD,CAAKxB,EAAWI,GACtBC,MAAOA,EAAMoB,OACbR,MAAOA,GAlCUS,KACvB,MAAMF,EAAOE,EAAKF,KAClB,GAAIhB,EAASmB,MAAKJ,GAAWA,EAAQC,OAASA,IAE5C,YADAI,MAAM,GAADC,OAAIL,EAAI,4BAIf,MAAMnB,EAAQqB,EAAKrB,MACbY,EAAQS,EAAKT,MACba,GAASC,EAAAA,EAAAA,IAAgB,CAAEP,OAAMnB,QAAOY,UAE9CL,EAASkB,EAAO,EA0BZE,CAAiBT,GACjBU,EAAAA,GAAAA,KAAW,mBAADJ,OAAoBN,EAAQC,OACtCF,GAAW,EACXY,UAEFC,EAAAA,EAAAA,MAACnD,EAAAA,GAAI,CAAAkD,SAAA,EACHpB,EAAAA,EAAAA,KAAC3B,EAAAA,GAAK,CAACiD,QAAQ,YAAWF,SAAC,gBAC3BpB,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAAC+C,GAAG,YAAYb,KAAK,YAAYc,YAAY,UACnDxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACf,KAAK,YAAYgB,UAAW7C,EAAAA,MAE1CmB,EAAAA,EAAAA,KAAC3B,EAAAA,GAAK,CAACiD,QAAQ,WAAUF,SAAC,eAC1BpB,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAAC+C,GAAG,WAAWb,KAAK,WAAWc,YAAY,eACjDxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACf,KAAK,WAAWgB,UAAW7C,EAAAA,MAEzCmB,EAAAA,EAAAA,KAAC3B,EAAAA,GAAK,CAACiD,QAAQ,QAAOF,SAAC,WACvBpB,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAAC+C,GAAG,QAAQb,KAAK,QAAQc,YAAY,QAAQG,KAAK,WACxD3B,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACf,KAAK,QAAQgB,UAAW7C,EAAAA,MAEtCmB,EAAAA,EAAAA,KAAC3B,EAAAA,GAAK,CAACiD,QAAQ,QAAOF,SAAC,WACvBpB,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAAC+C,GAAG,QAAQb,KAAK,QAAQc,YAAY,QAAQG,KAAK,WACxD3B,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACf,KAAK,QAAQgB,UAAW7C,EAAAA,MAEtCmB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACD,KAAK,SAASE,UAAU,EAAOT,SAAS,oBAE3C,E,wBCzFN,MAEMU,EAAyBvB,IAA2B,IAA1B,SAAEb,EAAQ,OAAEqC,GAAQxB,EACzD,IAAKwB,EACH,OAAOrC,EAASG,MAGlB,MAAMmC,EAAmBD,EAAOE,cAKhC,OAJevC,EAASG,MAAMkC,QAAOG,IAAe,IAAd,KAAExB,GAAMwB,EAC5C,OAAOxB,EAAKuB,cAAcE,SAASH,EAAiB,GAGzC,EAMFI,GAAsBC,EAAAA,EAAAA,IAAe,CAFpBC,GAASA,EAAM5C,SAASG,QAEcH,GAE3DA,EAAS6C,QACd,CAACC,EAAO9C,KACFA,IACF8C,EAAM9C,UAAY,GAEb8C,IAET,CAAE9C,SAAU,M,iEC3BT,MAAM+C,EAAgBxE,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mGAOzBsE,EAAgBzE,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sbASnBG,EAAAA,EAAAA,MAAAA,QASNoE,EAAoB1E,EAAAA,GAAAA,IAAUS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uDAK9BwE,EAAsB3E,EAAAA,GAAAA,IAAUW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4EAMhCyE,EAAc5E,EAAAA,GAAAA,EAAQa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+HAEpBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,YAAAA,QAEAA,EAAAA,EAAAA,UAAAA,GAIJuE,EAAgB7E,EAAAA,GAAAA,EAAQ8E,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,uEAEtBG,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,YAAAA,O,MC/CV,MAAMyE,EAAc/E,EAAAA,GAAAA,EAAQE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qJACpBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,YAAAA,OACNA,EAAAA,EAAAA,OAAAA,UAIMA,EAAAA,EAAAA,UAAAA,GCPJ0E,EAAkBA,KAC3B,MAAM,SAAEvD,IAAaC,EAAAA,EAAAA,IAAYyC,GAEjC,OACIpC,EAAAA,EAAAA,KAAA,OAAAoB,UACIC,EAAAA,EAAAA,MAAC2B,EAAW,CAAA5B,SAAA,CAAC,mBAAiB1B,MAC5B,E,cCad,MAwDA,EAxDoBwD,KAClB,MAAMpD,GAAWC,EAAAA,EAAAA,OAEjBoD,EAAAA,EAAAA,YAAU,KACRrD,GAASsD,EAAAA,EAAAA,MAAmB,GAC3B,CAACtD,IAEJ,MAAMJ,GAAWC,EAAAA,EAAAA,IAAYmC,GAc7B,OACE9B,EAAAA,EAAAA,KAAAqD,EAAAA,SAAA,CAAAjC,UACEC,EAAAA,EAAAA,MAACoB,EAAa,CAAArB,SAAA,EACZpB,EAAAA,EAAAA,KAACiD,EAAe,IAEfvD,EAAS4D,KAAIhD,IAA4C,IAA3C,IAAEiD,EAAG,KAAE7C,EAAI,MAAEnB,EAAK,MAAEY,EAAK,SAAEqD,GAAUlD,EAClD,OACEe,EAAAA,EAAAA,MAACqB,EAAa,CAAAtB,SAAA,EACZC,EAAAA,EAAAA,MAACsB,EAAiB,CAAAvB,SAAA,EAChBpB,EAAAA,EAAAA,KAAC6C,EAAW,CAAAzB,SAAEV,KACdV,EAAAA,EAAAA,KAAC8C,EAAa,CAAA1B,SAAE7B,KAChBS,EAAAA,EAAAA,KAAC8C,EAAa,CAAA1B,SAAEjB,QAGlBkB,EAAAA,EAAAA,MAACuB,EAAmB,CAAAxB,SAAA,EAClBpB,EAAAA,EAAAA,KAACyD,EAAAA,EAAQ,CACPlC,GAAIgC,EACJG,QAASF,EACTG,SAAUA,IAxBLJ,KACnB,MAAM9C,EAAUf,EAASmB,MAAK+C,GAAQA,EAAKL,MAAQA,IACnDzD,GAAS+D,EAAAA,EAAAA,IAAmBpD,IAC5BX,GAASsD,EAAAA,EAAAA,MAAmB,EAqBEU,CAAaP,MAG/BvD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,KAAMC,EAAAA,IACNC,SAAU,GACVC,QAASA,IApCGZ,KAC1BzD,GAASsE,EAAAA,EAAAA,IAAmBb,IAC5BpC,EAAAA,GAAAA,QAAc,wBACdrB,GAASsD,EAAAA,EAAAA,MAAmB,EAiCCiB,CAAoBd,UAjBrBA,EAoBJ,QAIrB,E,cC3EA,MAAMe,EAAehE,IAAA,IAAC,OAAEyB,GAAQzB,EAAA,OAAKyB,CAAM,E,UCG3C,MAAMwC,EAAkBtG,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAO5BoG,EAAcvG,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4GACxBG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,YAAAA,QAGAA,EAAAA,EAAAA,UAAAA,GAIJkG,EAAcxG,EAAAA,GAAAA,MAAYS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sRAIxBG,EAAAA,EAAAA,UAAAA,GACIA,EAAAA,EAAAA,MAAAA,OASFA,EAAAA,EAAAA,UAAAA,GCNjB,EAtBmBmG,KACjB,MAAM3C,GAASpC,EAAAA,EAAAA,IAAY2E,GACrBxE,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACuE,EAAe,CAAAnD,UACdC,EAAAA,EAAAA,MAACmD,EAAW,CAAApD,SAAA,CAAC,yBAEXpB,EAAAA,EAAAA,KAACyE,EAAW,CAAC9C,KAAK,OAChBH,YAAY,cACZmD,MAAO5C,EACP4B,SAZaiB,IACnB,MAAM5D,GAAS6D,EAAAA,EAAAA,GAAUD,EAAEE,OAAOH,OAClC7E,EAASkB,EAAO,QAYE,ECTtB,EAVqB+D,KAEb1D,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAjC,SAAA,EACIpB,EAAAA,EAAAA,KAACP,EAAW,KACZO,EAAAA,EAAAA,KAAC0E,EAAU,KACX1E,EAAAA,EAAAA,KAACkD,EAAW,M,6ECNjB,MAAM8B,EAAkB/G,EAAAA,GAAAA,OAAaE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gbAGzB6G,IAASA,EAAMC,QAAU,eAC/BD,GAASA,EAAMC,QAAU,sBAAwB,QAEzC3G,EAAAA,EAAAA,MAAAA,OAEJA,EAAAA,EAAAA,UAAAA,EAUGA,EAAAA,EAAAA,UAAAA,G,aCjBpB,MAAMwF,EAAazD,IAAkF,IAA/E0D,KAAMmB,EAAO,KAAI,KAAExD,EAAI,SAAEE,EAAQ,SAAET,EAAQ,QAAE+C,EAAO,SAAED,EAAQ,QAAEgB,GAAS5E,EAC3F,OACIN,EAAAA,EAAAA,KAAAqD,EAAAA,SAAA,CAAAjC,UACIC,EAAAA,EAAAA,MAAC2D,EAAe,CACZE,QAASA,EACTvD,KAAMA,EACNE,SAAUA,EACVsC,QAASA,EAAQ/C,SAAA,CACnB+D,IAAQnF,EAAAA,EAAAA,KAACmF,EAAI,CAACC,KAAMlB,IAEjB9C,MAEN,EAIX2C,EAAWsB,aAAe,CACtBlB,QAASA,IAAM,KACf/C,SAAU,MAKd,S,gDC1BA,QAAsB,oBAAtB,EAAuD,2B,aCEhD,MAAMQ,EAAStB,IAKf,IALgB,SACrBgF,GAAW,EAAK,KAChB3D,EAAO,SAAQ,SACfP,KACGmE,GACJjF,EACC,OACEN,EAAAA,EAAAA,KAAA,UACEwF,WAAWC,EAAAA,EAAAA,GAAKC,EAAS,CACvB,CAACA,GAAiBJ,IAEpB3D,KAAMA,KACF4D,EAAUnE,SAEbA,GACM,C,kCCjBb,QAAoC,oCAApC,EAAyF,iCAAzF,EAAsI,4B,aCCtI,MAcA,EAdiBd,IAA4B,IAA3B,SAAEqD,EAAQ,QAAED,GAASpD,EACrC,OACEe,EAAAA,EAAAA,MAAA,SAAOmE,UAAWE,EAAsBtE,SAAA,EACtCpB,EAAAA,EAAAA,KAAA,SACEwF,UAAWE,EACXhC,QAASA,EACTC,SAAUA,EACVhC,KAAK,cAEP3B,EAAAA,EAAAA,KAAA,QAAMwF,UAAWE,MACX,C,kCCZZ,MAAMC,EAAc,iBA+EpB,EA7Ec,CACZC,OAAQ,CACNC,MAAO,OACPC,KAAM,OACNC,WAAY,UACZb,QAAS,UACTc,UAAW,UACXC,OAAQ,UACRC,MAAO,WAGTC,MAAO,CACLC,KAAM,oBACNC,QAAS,wBACTC,UAAW,oBAGbC,UAAW,CACTC,GAAI,OACJC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,GAAI,OACJC,IAAK,QAGPC,YAAa,CACXC,MAAO,IACPC,QAAS,IACTC,KAAM,KAGRC,YAAa,CACXd,KAAM,IACNC,QAAS,OAGXc,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,QAAS,SAErEC,QAAS,CACPC,KAAM,OACNC,OAAQ,aAGVC,MAAO,CACLF,KAAM,IACNC,OAAQ,MACRE,KAAM,OACNC,MAAO,OAGTC,MAAO,CACLC,UAAW,UAGbC,OAAQ,CAENC,IAAI,yBAAD9G,OAA2B4E,EAAW,8CAAA5E,OACZ4E,EAAW,8CAAA5E,OACX4E,EAAW,aAExCmC,OAAO,yBAAD/G,OAA2B4E,EAAW,gDAAA5E,OACb4E,EAAW,8CAAA5E,OACb4E,EAAW,+CAAA5E,OACT4E,EAAW,aAE1C6B,KAAK,yBAADzG,OAA2B4E,EAAW,8CAAA5E,OACb4E,EAAW,4CAAA5E,OACb4E,EAAW,8CAAA5E,OACT4E,EAAW,kDAAA5E,OACP4E,EAAW,kDAAA5E,OACX4E,EAAW,mDAAA5E,OACV4E,EAAW,mDAAA5E,OACX4E,EAAW,c","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.styled.js","components/CounterContacts/CounterContacts.styled.js","components/CounterContacts/CounterContacts.jsx","components/ContactList/ContactList.jsx","redux/filter/filterSelectors.js","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","pages/ContactsPage/ContactsPage.jsx","shared/Buttons/ButtonIcon.style.jsx","shared/Buttons/ButtonIcon.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Buttons/Button.module.css?8b6e","shared/Buttons/Buttons.js","webpack://goit-react-hw-08-phonebook/./src/shared/CheckBox/checkbox.module.css?97a6","shared/CheckBox/CheckBox.js","theme.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'theme';\nimport { Form, Field } from 'formik';\n\nexport const PhonebookForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const Label = styled.label`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const InputText = styled(Field)`\n  margin-bottom: 10px;\n  height: 46px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Error = styled.p`\n  display: inline;\n  position: absolute;\n  top: calc(${theme.space[2]} + 30px);\n  font-size: ${theme.fontSizes.m};\n  color: red;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Button } from '../../shared/Buttons/Buttons';\nimport { fetchAddContact } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport {\n  PhonebookForm as Form,\n  Input,\n  Label,\n  Error,\n} from './ContactForm.styled';\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst ValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(20, 'Too Long!'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Number is not valid')\n    .required('Required'),\n});\n\nconst ContactForm = () => {\n  const contacts = useSelector(store => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const phone = data.phone;\n    const email = data.email;\n    const action = fetchAddContact({ name, phone, email });\n\n    dispatch(action);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n      }}\n      validationSchema={ValidationSchema}\n      onSubmit={({ firstName, lastName, phone, email }, { resetForm }) => {\n        const name = (firstName, lastName) => {\n          if (lastName) {\n            return firstName.trim() + ' ' + lastName.trim();\n          }\n          return firstName.trim();\n        };\n\n        const contact = {\n          name: name(firstName, lastName),\n          phone: phone.trim(),\n          email: email,\n        };\n\n        handleAddContact(contact);\n        toast.info(`Contact was add ${contact.name}`);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"firstName\">First Name</Label>\n        <Input id=\"firstName\" name=\"firstName\" placeholder=\"Name\" />\n        <ErrorMessage name=\"firstName\" component={Error} />\n\n        <Label htmlFor=\"lastName\">Last Name</Label>\n        <Input id=\"lastName\" name=\"lastName\" placeholder=\"Last name\" />\n        <ErrorMessage name=\"lastName\" component={Error} />\n\n        <Label htmlFor=\"phone\">Phone</Label>\n        <Input id=\"phone\" name=\"phone\" placeholder=\"Phone\" type=\"phone\" />\n        <ErrorMessage name=\"phone\" component={Error} />\n\n        <Label htmlFor=\"email\">Email</Label>\n        <Input id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" />\n        <ErrorMessage name=\"email\" component={Error} />\n\n        <Button type=\"submit\" disabled={false} children=\"Add contact\"></Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;","import { createSelector } from '@reduxjs/toolkit';\n\n\nexport const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectContactsCount = createSelector([selectContacts], contacts => {\n\n  return contacts.reduce(\n    (count, contacts) => {\n      if (contacts) {\n        count.contacts += 1;\n      }\n      return count;\n    },\n    { contacts: 0 }\n  );\n});\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ContactListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n\nexport const ContactItemLi = styled.li`\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  justify-content: space-between;\n  width: 260px;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid #eee;\n  border-radius: ${theme.radii.normal};\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(190, 190, 190),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: lightgray;\n    box-shadow: 0px 0px 20px -18px;\n  }\n`;\n\nexport const ContactListWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactButtonWraper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const ContactName = styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeights.regular};\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const ContactNumber = styled.p`\n  text-align: right;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n`;\n","import styled from 'styled-components';\nimport theme from 'theme';\n\n\nexport const CounterText = styled.p`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  margin-bottom: 16px;\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\n\n","import { useSelector } from \"react-redux\";\nimport { selectContactsCount } from \"redux/contacts/contactsSelectors\";\nimport { CounterText } from \"./CounterContacts.styled\";\n\nexport const CounterContacts = () => {\n    const { contacts } = useSelector(selectContactsCount);\n\n    return (\n        <div>\n            <CounterText>Total contacts: {contacts}</CounterText>\n        </div>\n    );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport ButtonIcon from 'shared/Buttons/ButtonIcon';\nimport { toast } from 'react-toastify';\nimport {\n  ContactButtonWraper,\n  ContactItemLi,\n  ContactListUl,\n  ContactListWraper,\n  ContactName,\n  ContactNumber,\n} from './ContactList.styled';\n\nimport {\n  fetchAllContacts,\n  fetchDeleteContact,\n  fetchStatusContact,\n} from 'redux/contacts/contactsOperations';\nimport { CounterContacts } from 'components/CounterContacts/CounterContacts';\nimport CheckBox from 'shared/CheckBox/CheckBox';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleContactDelete = _id => {\n    dispatch(fetchDeleteContact(_id));\n    toast.warning(`Contact was deleted `);\n    dispatch(fetchAllContacts());\n  };\n\n  const handleToggle = _id => {\n    const contact = contacts.find(item => item._id === _id);\n    dispatch(fetchStatusContact(contact));\n    dispatch(fetchAllContacts());\n  };\n\n  return (\n    <>\n      <ContactListUl>\n        <CounterContacts />\n\n        {contacts.map(({ _id, name, phone, email, favorite }) => {\n          return (\n            <ContactItemLi key={_id}>\n              <ContactListWraper>\n                <ContactName>{name}</ContactName>\n                <ContactNumber>{phone}</ContactNumber>\n                <ContactNumber>{email}</ContactNumber>\n              </ContactListWraper>\n\n              <ContactButtonWraper>\n                <CheckBox\n                  id={_id}\n                  checked={favorite}\n                  onChange={() => handleToggle(_id)}\n                />\n\n                <ButtonIcon\n                  icon={AiOutlineDelete}\n                  iconSize={20}\n                  onClick={() => handleContactDelete(_id)}\n                ></ButtonIcon>\n              </ContactButtonWraper>\n            </ContactItemLi>\n          );\n        })}\n      </ContactListUl>\n    </>\n  );\n};\n\nexport default ContactList;\n","export const selectFilter = ({ filter }) => filter;\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeights.regular};\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  padding: 10px;\n  padding-left: 30px;\n  font-size: ${theme.fontSizes.xs};\n  border-radius: ${theme.radii.normal};\n  border: 1px solid #ccc;\n  box-shadow: 0px 0px 20px -20px;\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { FilterContainer, FilterInput, FilterLabel } from './FilterForm.styled';\n\nconst FilterForm = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const action = setFilter(e.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n          Find contacts by name\n        <FilterInput type=\"text\"\n          placeholder=\"Search name\"\n          value={filter}\n          onChange={handleFilter} />\n        </FilterLabel>\n    </FilterContainer>\n  );\n};\n\nexport default FilterForm;","import  ContactForm from \"components/ContactForm/ContactForm\"\nimport  ContactList from \"components/ContactList/ContactList\"\nimport  FilterForm from \"components/FilterForm/FilterForm\"\n\nconst ContactsPage = () => {\n    return (\n        <>\n            <ContactForm />\n            <FilterForm />\n            <ContactList />\n        </>\n    )\n}\n\nexport default ContactsPage;","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ButtoIconStyled = styled.button`\n    display: flex;\n    align-items: center;\n    background: ${ props => props.primary ? \"lightgray\" : \"lightgray\"};\n    color: ${props => props.primary ? \"{theme.colors.text}\" : \"grey\" };\n    padding: 6px;\n    border-radius: ${theme.radii.normal};\n    border: 1px solid darkgray;\n    font-size: ${theme.fontSizes.s};\n    cursor: pointer;\n    &:hover {\n        background-color: #1976d2;\n        box-shadow: 0px 0px 20px -18px;\n    }\n    &:active {\n    transform: scale(0.95);\n    }\n    @media (min-width: 420px) {\n       font-size: ${theme.fontSizes.m};\n      }\n`;","import React from 'react';\nimport { ButtoIconStyled } from './ButtonIcon.style'\n\n\nconst ButtonIcon = ({ icon: Icon = null, type, disabled, children, onClick, iconSize, primary }) => {\n    return (\n        <>\n            <ButtoIconStyled\n                primary={primary}\n                type={type}\n                disabled={disabled}\n                onClick={onClick}\n            >{Icon && <Icon size={iconSize} />}\n\n                {children}\n            </ButtoIconStyled>\n        </>\n    )\n}\n\nButtonIcon.defaultProps = {\n    onClick: () => null,\n    children: null,\n    // primary: null,\n};\n\n\nexport default ButtonIcon;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__y0oeI\",\"isSelected\":\"Button_isSelected__VSqTZ\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxContainer\":\"checkbox_checkboxContainer__E68d+\",\"customCheckbox\":\"checkbox_customCheckbox__9pzHr\",\"checkmark\":\"checkbox_checkmark__bY-D5\",\"checkAnim\":\"checkbox_checkAnim__2h4ro\"};","import css from './checkbox.module.css';\n\nconst CheckBox = ({ onChange, checked }) => {\n  return (\n    <label className={css.checkboxContainer}>\n      <input\n        className={css.customCheckbox}\n        checked={checked}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      <span className={css.checkmark}></span>\n    </label>\n  );\n};\n\nexport default CheckBox;","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["PhonebookForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","theme","Input","Field","_templateObject3","InputText","_templateObject4","Error","_templateObject5","ValidationSchema","Yup","shape","firstName","min","max","required","lastName","phone","matches","ContactForm","contacts","useSelector","store","items","dispatch","useDispatch","_jsx","Formik","initialValues","email","validationSchema","onSubmit","_ref","_ref2","resetForm","contact","name","trim","data","find","alert","concat","action","fetchAddContact","handleAddContact","toast","children","_jsxs","htmlFor","id","placeholder","ErrorMessage","component","type","Button","disabled","selectFilteredContacts","filter","normalizedFilter","toLowerCase","_ref3","includes","selectContactsCount","createSelector","state","reduce","count","ContactListUl","ContactItemLi","ContactListWraper","ContactButtonWraper","ContactName","ContactNumber","_templateObject6","CounterText","CounterContacts","ContactList","useEffect","fetchAllContacts","_Fragment","map","_id","favorite","CheckBox","checked","onChange","item","fetchStatusContact","handleToggle","ButtonIcon","icon","AiOutlineDelete","iconSize","onClick","fetchDeleteContact","handleContactDelete","selectFilter","FilterContainer","FilterLabel","FilterInput","FilterForm","value","e","setFilter","target","ContactsPage","ButtoIconStyled","props","primary","Icon","size","defaultProps","selected","otherProps","className","clsx","css","shadowColor","colors","white","text","background","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","medium"],"sourceRoot":""}