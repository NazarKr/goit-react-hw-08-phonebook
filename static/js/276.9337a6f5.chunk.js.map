{"version":3,"file":"static/js/276.9337a6f5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/shared/Buttons/Button.module.css?8b6e","shared/Buttons/Buttons.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","shared/Buttons/ButtonIcon.style.jsx","shared/Buttons/ButtonIcon.jsx","components/ContactList/ContactList.styled.js","components/CounterContacts/CounterContacts.styled.js","components/CounterContacts/CounterContacts.jsx","components/ContactList/ContactList.jsx","redux/filter/filterSelectors.js","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","pages/ContactsPage/ContactsPage.jsx","theme.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__y0oeI\",\"isSelected\":\"Button_isSelected__VSqTZ\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","import styled from 'styled-components';\nimport theme from 'theme';\nimport { Form, Field } from 'formik';\n\nexport const PhonebookForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const Label = styled.label`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  box-shadow: 0px 0px 20px -20px;\n  font-size: ${theme.fontSizes.m};\n  margin-left: ${theme.space[3]};\n  padding: ${theme.space[3]};\n  border: 1px solid #ccc;\n  border-radius: ${theme.radii.normal};\n  background-color: ${theme.colors.primary};\n\n  ::placeholder {\n    font-family: ${theme.fonts.body};\n    color: ${theme.colors.secondary};\n  }\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\nexport const Error = styled.p`\n  display: inline;\n  position: absolute;\n  top: calc(${theme.space[2]} + 30px);\n  font-size: ${theme.fontSizes.m};\n  color: red;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Button } from '../../shared/Buttons/Buttons';\nimport { fetchAddContact } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport {\n  PhonebookForm as Form,\n  Input,\n  Label,\n  Error,\n} from './ContactForm.styled';\n\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst ValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(20, 'Too Long!'),\n  tel: Yup.string()\n    .matches(phoneRegExp, 'Number is not valid')\n    .required('Required'),\n});\n\nconst ContactForm = () => {\n\nconst contacts = useSelector(store => store.contacts.items);\nconst dispatch = useDispatch();\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const number = data.number;\n    const action = fetchAddContact({ name, number });\n    dispatch(action);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        tel: '',\n      }}\n      validationSchema={ValidationSchema}\n      onSubmit={({ firstName, lastName, tel }, { resetForm }) => {\n        const name = (firstName, lastName) => {\n          if (lastName) {\n            return firstName.trim() + ' ' + lastName.trim();\n          }\n          return firstName.trim();\n        };\n\n        const contact = {\n          name: name(firstName, lastName),\n          number: tel.trim(),\n        };\n\n        handleAddContact(contact);\n        toast.info('Contact was add');\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"firstName\">First Name</Label>\n        <Input id=\"firstName\" name=\"firstName\" placeholder=\"Name\" />\n        <ErrorMessage name=\"firstName\" component={Error} />\n\n        <Label htmlFor=\"lastName\">Last Name</Label>\n        <Input id=\"lastName\" name=\"lastName\" placeholder=\"Last name\" />\n        <ErrorMessage name=\"lastName\" component={Error} />\n\n        <Label htmlFor=\"tel\">Phone</Label>\n        <Input id=\"tel\" name=\"tel\" placeholder=\"Phone\" type=\"tel\" />\n        <ErrorMessage name=\"tel\" component={Error} />\n\n        <Button type=\"submit\" disabled={false} children=\"Add contact\"></Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;","import { createSelector } from '@reduxjs/toolkit';\n\n\nexport const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectContactsCount = createSelector([selectContacts], contacts => {\n\n  return contacts.reduce(\n    (count, contacts) => {\n      if (contacts) {\n        count.contacts += 1;\n      }\n      return count;\n    },\n    { contacts: 0 }\n  );\n});\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ButtoIconStyled = styled.button`\n    display: flex;\n    align-items: center;\n    background: ${ props => props.primary ? \"lightgray\" : \"lightgray\"};\n    color: ${props => props.primary ? \"{theme.colors.text}\" : \"grey\" };\n    padding: 6px;\n    border-radius: ${theme.radii.normal};\n    border: 1px solid darkgray;\n    font-size: ${theme.fontSizes.s};\n    cursor: pointer;\n    &:hover {\n        background-color: #1976d2;\n        box-shadow: 0px 0px 20px -18px;\n    }\n    &:active {\n    transform: scale(0.95);\n    }\n    @media (min-width: 420px) {\n       font-size: ${theme.fontSizes.m};\n      }\n`;","import React from 'react';\nimport { ButtoIconStyled } from './ButtonIcon.style'\n\n\nconst ButtonIcon = ({ icon: Icon = null, type, disabled, children, onClick, iconSize, primary }) => {\n    return (\n        <>\n            <ButtoIconStyled\n                primary={primary}\n                type={type}\n                disabled={disabled}\n                onClick={onClick}\n            >{Icon && <Icon size={iconSize} />}\n\n                {children}\n            </ButtoIconStyled>\n        </>\n    )\n}\n\nButtonIcon.defaultProps = {\n    onClick: () => null,\n    children: null,\n    // primary: null,\n};\n\n\nexport default ButtonIcon;","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const ContactListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n\nexport const ContactItemLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 260px;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid #eee;\n  border-radius: ${theme.radii.normal};\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(190, 190, 190),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: lightgray;\n    box-shadow: 0px 0px 20px -18px;\n  }\n`;\n\nexport const ContactName = styled.p`\n  text-align: left;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const ContactNumber = styled.p`\n  text-align: right;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeights.light};\n  margin-right: 6px;\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import styled from 'styled-components';\nimport theme from 'theme';\n\n\nexport const CounterText = styled.p`\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeights.normal};\n  color: ${theme.colors.secondary};\n  margin-bottom: 16px;\n  \n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n\n\n","import { useSelector } from \"react-redux\";\nimport { selectContactsCount } from \"redux/contacts/contactsSelectors\";\nimport { CounterText } from \"./CounterContacts.styled\";\n\nexport const CounterContacts = () => {\n    const { contacts } = useSelector(selectContactsCount);\n\n    return (\n        <div>\n            <CounterText>Total contacts: {contacts}</CounterText>\n        </div>\n    );\n};\n","\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport ButtonIcon from 'shared/Buttons/ButtonIcon';\nimport { toast } from 'react-toastify';\nimport {\n  ContactItemLi,\n  ContactListUl,\n  ContactName,\n  ContactNumber,\n} from './ContactList.styled';\n\nimport {\n  fetchAllContacts,\n  fetchDeleteContact,\n} from 'redux/contacts/contactsOperations';\nimport { CounterContacts } from 'components/CounterContacts/CounterContacts';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const list = useSelector(selectFilteredContacts);\n\n  const handleContactDelete = id => {\n    dispatch(fetchDeleteContact(id));\n    toast.info('Contact was deleted');\n  };\n\n  return (\n    <>\n      <ContactListUl>\n        <CounterContacts />\n        \n      {list.map(({ id, name, number }) => { \n\n        return (\n          <ContactItemLi key={id}>\n            <ContactName>{name}</ContactName>\n            <ContactNumber>{number}</ContactNumber> \n            <ButtonIcon\n              icon={AiOutlineDelete}\n              iconSize={20}\n              onClick={() => handleContactDelete(id)}\n            >\n            </ButtonIcon>\n          </ContactItemLi>\n        );\n      })}\n      </ContactListUl>\n    </>\n\n  );\n};\n\nexport default ContactList;","export const selectFilter = ({ filter }) => filter;\n","import styled from 'styled-components';\nimport theme from 'theme';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeights.regular};\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  padding: 10px;\n  padding-left: 30px;\n  font-size: ${theme.fontSizes.xs};\n  border-radius: ${theme.radii.normal};\n  border: 1px solid #ccc;\n  box-shadow: 0px 0px 20px -20px;\n\n  :focus {\n    outline-color: #1976d2;\n  }\n\n  @media (min-width: 420px) {\n    font-size: ${theme.fontSizes.s};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { FilterContainer, FilterInput, FilterLabel } from './FilterForm.styled';\n\nconst FilterForm = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const action = setFilter(e.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n          Find contacts by name\n        <FilterInput type=\"text\"\n          placeholder=\"Search name\"\n          value={filter}\n          onChange={handleFilter} />\n        </FilterLabel>\n    </FilterContainer>\n  );\n};\n\nexport default FilterForm;","import  ContactForm from \"components/ContactForm/ContactForm\"\nimport  ContactList from \"components/ContactList/ContactList\"\nimport  FilterForm from \"components/FilterForm/FilterForm\"\n\nconst ContactsPage = () => {\n    return (\n        <>\n            <ContactForm />\n            <FilterForm />\n            <ContactList />\n        </>\n    )\n}\n\nexport default ContactsPage;","const shadowColor = '235deg 32% 13%';\n\nconst theme = {\n  colors: {\n    white: '#fff',\n    text: '#000',\n    background: '#90ADC6',\n    primary: '#E9EAEC',\n    secondary: '#333652',\n    accent: '#FAD02C',\n    muted: '#808080',\n  },\n\n  fonts: {\n    body: 'Rubik, sans-serif',\n    heading: 'system-ui, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '20px',\n    xl: '24px',\n    xxl: '32px',\n  },\n\n  fontWeights: {\n    light: 400,\n    regular: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n\n  space: ['0px', '2px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n\n  borders: {\n    none: 'none',\n    normal: '1px solid',\n  },\n\n  radii: {\n    none: '0',\n    normal: '5px',\n    high: '16px',\n    round: '50%',\n  },\n\n  sizes: {\n    container: '1200px',\n  },\n\n  shadow: {\n    // ${shadowColor}\n    low: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.47),\n    0.3px 1.2px 1.1px -2px hsl(${shadowColor} / 0.35),\n    0.7px 3px 2.7px -4.1px hsl(${shadowColor} / 0.23);`,\n\n    medium: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.49),\n    0.4px 1.8px 1.6px -1.3px hsl(${shadowColor} / 0.39),\n    1.3px 5.5px 5px -2.7px hsl(${shadowColor} / 0.3),\n    3.5px 15px 13.7px -4.1px hsl(${shadowColor} / 0.21);`,\n\n    high: `0.2px 0.8px 0.7px hsl(${shadowColor} / 0.45),\n    0.5px 2.2px 2px -0.6px hsl(${shadowColor} / 0.41),\n    1px 4.4px 4px -1.2px hsl(${shadowColor} / 0.37),\n    2px 8.5px 7.8px -1.7px hsl(${shadowColor} / 0.32),\n    3.6px 15.8px 14.5px -2.3px hsl(${shadowColor} / 0.28),\n    6.3px 27.4px 25.1px -2.9px hsl(${shadowColor} / 0.24),\n    10.3px 44.6px 40.9px -3.5px hsl(${shadowColor} / 0.19),\n    15.8px 68.4px 62.7px -4.1px hsl(${shadowColor} / 0.15);`,\n  },\n};\n\nexport default theme;\n"],"names":["Button","_ref","_ref$selected","selected","_ref$type","type","children","otherProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","clsx","css","_defineProperty","PhonebookForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","theme","Input","Field","_templateObject3","Error","_templateObject4","ValidationSchema","Yup","shape","firstName","min","max","required","lastName","tel","matches","contacts","useSelector","store","items","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","_ref2","resetForm","contact","name","trim","number","data","find","alert","concat","action","fetchAddContact","handleAddContact","toast","_jsxs","htmlFor","id","placeholder","ErrorMessage","component","disabled","selectFilteredContacts","filter","normalizedFilter","toLowerCase","_ref3","includes","selectContactsCount","createSelector","state","reduce","count","ButtoIconStyled","props","primary","ButtonIcon","_ref$icon","icon","Icon","onClick","iconSize","_Fragment","size","defaultProps","ContactListUl","ContactItemLi","ContactName","ContactNumber","CounterText","CounterContacts","useEffect","fetchAllContacts","list","map","AiOutlineDelete","fetchDeleteContact","handleContactDelete","selectFilter","FilterContainer","FilterLabel","FilterInput","value","onChange","e","setFilter","target","ContactForm","FilterForm","ContactList","shadowColor","colors","white","text","background","secondary","accent","muted","fonts","body","heading","monospace","fontSizes","xs","s","m","l","xl","xxl","fontWeights","light","regular","bold","lineHeights","space","borders","none","normal","radii","high","round","sizes","container","shadow","low","medium"],"sourceRoot":""}